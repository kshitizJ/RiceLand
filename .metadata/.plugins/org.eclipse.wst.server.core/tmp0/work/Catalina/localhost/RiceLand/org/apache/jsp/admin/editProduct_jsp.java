/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2021-05-06 07:15:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import com.db.DbConnect;
import com.dao.ProductDao;
import com.detail.Product;
import com.detail.Admin;

public final class editProduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/admin/adminNav.jsp", Long.valueOf(1620197276864L));
    _jspx_dependants.put("/admin/common.jsp", Long.valueOf(1620025144600L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.detail.Product");
    _jspx_imports_classes.add("com.dao.ProductDao");
    _jspx_imports_classes.add("com.detail.Admin");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("com.db.DbConnect");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

	response.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
Admin admin1 = (Admin) session.getAttribute("admin");
if (admin1 != null) {

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<link rel=\"icon\" type=\"image/x-icon\"\n");
      out.write("\thref=\"../assets/images/logo/logo.svg\" />\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n");
      out.write("<link\n");
      out.write("\thref=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap\"\n");
      out.write("\trel=\"stylesheet\">\n");
      out.write("<!--Font awesome icon-->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"https://pro.fontawesome.com/releases/v5.10.0/css/all.css\"\n");
      out.write("\tintegrity=\"sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p\"\n");
      out.write("\tcrossorigin=\"anonymous\" />\n");
      out.write("<!--Bootstrap link-->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\n");
      out.write("\tintegrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\n");
      out.write("\tcrossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("<!-- Bootstrap scripts -->\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"\n");
      out.write("\tintegrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\n");
      out.write("<script\n");
      out.write("\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"\n");
      out.write("\tintegrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\"\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\n");
      out.write("<script\n");
      out.write("\tsrc=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js\"\n");
      out.write("\tintegrity=\"sha384-+YQ4JLhjyBLPDQt//I+STsc9iw4uQqACwlvpslubQzn4u2UU2UFM80nGisd026JF\"\n");
      out.write("\tcrossorigin=\"anonymous\"></script>");
      out.write("\n");
      out.write("<title>Edit Product</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t");
      out.write('\n');

	response.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
Admin admin = (Admin) session.getAttribute("admin");
if (admin != null) {

      out.write("\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\n");
      out.write("\t<div class=\"container-fluid\">\n");
      out.write("\t\t<a class=\"navbar-brand\" href=\"admin.jsp\"><img\n");
      out.write("\t\t\tsrc=\"../assets/images/logo/logo.svg\" width=\"125px\"></a>\n");
      out.write("\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n");
      out.write("\t\t\tdata-target=\"#navbarNav\" aria-controls=\"navbarNav\"\n");
      out.write("\t\t\taria-expanded=\"false\" aria-label=\"Toggle navigation\">\n");
      out.write("\t\t\t<span class=\"navbar-toggler-icon\"></span>\n");
      out.write("\t\t</button>\n");
      out.write("\t\t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n");
      out.write("\t\t\t<ul class=\"navbar-nav\">\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"showUsers.jsp\"><i\n");
      out.write("\t\t\t\t\t\tclass=\"fas fa-list-alt\"></i> Users</a></li>\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"showProduct.jsp\"><i\n");
      out.write("\t\t\t\t\t\tclass=\"fas fa-th-list\"></i> Products</a></li>\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"addProduct.jsp\"><i\n");
      out.write("\t\t\t\t\t\tclass=\"fas fa-plus\"></i> Add Product</a></li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t\t<div class=\"d-flex ml-auto\">\n");
      out.write("\t\t\t\t<ul class=\"navbar-nav\">\n");
      out.write("\t\t\t\t\t<li class=\"nav-item\"><a\n");
      out.write("\t\t\t\t\t\tclass=\"nav-link btn btn-success mx-2 text-white\" href=\"\"><b>");
      out.print(admin.getFname() + " " + admin.getLname());
      out.write("</b></a></li>\n");
      out.write("\t\t\t\t\t<li class=\"nav-item\"><a\n");
      out.write("\t\t\t\t\t\tclass=\"nav-link btn btn-danger  mx-2 text-white\"\n");
      out.write("\t\t\t\t\t\thref=\"../LogoutServlet\"><b>Logout</b></a></li>\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</nav>\n");

	} else {
response.sendRedirect("../login.jsp");
}

      out.write('\n');
      out.write('	');

		int id = Integer.parseInt(request.getParameter("id"));
	ProductDao productdao = new ProductDao(DbConnect.getCon());
	Product product = productdao.getProduct(id);
	SimpleDateFormat ft = new SimpleDateFormat("dd-MM-yyyy");
	String date = ft.format(product.getDate());
	
      out.write("\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<div class=\"row\">\n");
      out.write("\t\t\t<div class=\"col-12 my-4\">\n");
      out.write("\t\t\t\t<h4 class=\"text-center\">Edit Product</h4>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"col-12 mb-3\">\n");
      out.write("\t\t\t\t<h4 class=\"text-center text-danger\">\n");
      out.write("\t\t\t\t\tProduct Id:\n");
      out.write("\t\t\t\t\t");
      out.print(product.getPid());
      out.write("</h4>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"col-12\">\n");
      out.write("\t\t\t\t<form class=\"row\" action=\"../EditProductDetail\" method=\"post\">\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" value=\"");
      out.print(id);
      out.write("\" name=\"id\">\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6 mb-3\">\n");
      out.write("\t\t\t\t\t\t<label for=\"validationCustom01\">Name</label> <input type=\"text\"\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control\" id=\"validationCustom01\"\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"Product Name\" name=\"name\"\n");
      out.write("\t\t\t\t\t\t\tvalue=\"");
      out.print(product.getName());
      out.write("\" required>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6 mb-3\">\n");
      out.write("\t\t\t\t\t\t<label class=\"form-label\" for=\"\">Image</label>\n");
      out.write("\t\t\t\t\t\t<div class=\"custom-file\">\n");
      out.write("\t\t\t\t\t\t\t<label class=\"custom-file-label\" for=\"customFile\">Choose\n");
      out.write("\t\t\t\t\t\t\t\tfile</label> <input type=\"file\" class=\"custom-file-input form-control\"\n");
      out.write("\t\t\t\t\t\t\t\tid=\"customFile\" value=\"");
      out.print(product.getPath());
      out.write("\"\n");
      out.write("\t\t\t\t\t\t\t\tdisabled=\"disabled\" required>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6 mb-3\">\n");
      out.write("\t\t\t\t\t\t<label for=\"validationCustom01\">Price</label> <input type=\"number\"\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control\" id=\"validationCustom01\"\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"Product Price\" min=\"0\"\n");
      out.write("\t\t\t\t\t\t\tvalue=\"");
      out.print(product.getPrice());
      out.write("\" name=\"price\" required>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6\">\n");
      out.write("\t\t\t\t\t\t<label class=\"form-label\" for=\"star\">Star</label> <select\n");
      out.write("\t\t\t\t\t\t\tclass=\"custom-select\" id=\"star\" disabled=\"disabled\">\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(product.getStar());
      out.write("\" selected>");
      out.print(product.getStar());
      out.write("</option>\n");
      out.write("\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"form-group col-md-6 mb-3\">\n");
      out.write("\t\t\t\t\t\t<label for=\"description\">Description</label>\n");
      out.write("\t\t\t\t\t\t<textarea class=\"form-control\" id=\"description\" name=\"description\"\n");
      out.write("\t\t\t\t\t\t\trows=\"1\" placeholder=\"Description\" required>");
      out.print(product.getDescription());
      out.write("</textarea>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6 mb-3\">\n");
      out.write("\t\t\t\t\t\t<label for=\"category\">Category</label> <select\n");
      out.write("\t\t\t\t\t\t\tclass=\"custom-select\" id=\"category\" name=\"category\" required>\n");
      out.write("\t\t\t\t\t\t\t");

								if ("Featured".equals(product.getCategory())) {
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<option value=\"featured\" selected>Featured</option>\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<option value=\"featured\">Featured</option>\n");
      out.write("\t\t\t\t\t\t\t");

								}
							if ("Latest".equals(product.getCategory())) {
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<option value=\"latest\" selected>Latest</option>\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<option value=\"latest\">Latest</option>\n");
      out.write("\t\t\t\t\t\t\t");

								}
							
      out.write("\n");
      out.write("\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6 mb-3\">\n");
      out.write("\t\t\t\t\t\t<label for=\"status\">Status</label> <select class=\"custom-select\"\n");
      out.write("\t\t\t\t\t\t\tid=\"status\" name=\"status\" required>\n");
      out.write("\t\t\t\t\t\t\t");

								if ("pending".equals(product.getStatus())) {
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<option value=\"pending\" selected>Pending</option>\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<option value=\"pending\">Pending</option>\n");
      out.write("\t\t\t\t\t\t\t");

								}
							if ("completed".equals(product.getStatus())) {
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<option value=\"completed\" selected>Completed</option>\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<option value=\"completed\">Completed</option>\n");
      out.write("\t\t\t\t\t\t\t");

								}
							
      out.write("\n");
      out.write("\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6 mb-3\">\n");
      out.write("\t\t\t\t\t\t<label for=\"validationCustom01\">Date Created On</label> <input\n");
      out.write("\t\t\t\t\t\t\tdisabled=\"disabled\" type=\"text\" class=\"form-control\"\n");
      out.write("\t\t\t\t\t\t\tid=\"validationCustom01\" value=\"");
      out.print(date);
      out.write("\" required>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"col-12 mb-3 text-center\">\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-success\">Submit</button>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");

	} else {
response.sendRedirect("../login.jsp");
}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
